//Listing 11-3
package com.packtpub.springhibernate.ch11;

import org.springframework.aop.MethodBeforeAdvice;

import java.lang.reflect.Method;

public class RecordingConcern implements MethodBeforeAdvice {
    private SetterInfoPrinter printer; //ideally initialized with Spring IoC

    public void before(Method method, Object[] args, Object target)
            throws Throwable {
        if ((method.getName().startsWith("set"))
                && (target.getClass() == Student.class)) {
            String methodName = method.getName();
            Object newValue = args[0];
            Method getter = getterForSetter(Student.class, methodName);
            Object oldValue = getter.invoke(target, args);
            printer.print(methodName, oldValue, newValue);
        }
    }

    public Method getterForSetter(Class clazz, String methodName) {
        try {
            return clazz.getMethod(methodName.replaceFirst("set", "get"));
        } catch (NoSuchMethodException e) {
            ;
        }
        return null;
    }

    public void setPrinter(SetterInfoPrinter printer) {
        this.printer = printer;
    }
}